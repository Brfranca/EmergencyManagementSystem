@model EmergencyManagementSystem.Service.Models.VehicleModel
@using EmergencyManagementSystem.Service.Models
@{
    ViewData["Title"] = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.AntiForgeryToken()
<div class="content-header sty-one">
    <h1 class="text-white">Atualização de Veículo</h1>
</div>
@using (Html.BeginForm())
{
    <div class="content">
        <div class="info-box">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-body">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="row">
                                <div class="col-md-4 col-xs-12">
                                    <h4 class="card-title">Dados do Veículo</h4>
                                    <div id="treeview1" class=""></div>
                                </div>
                            </div>
                            <input type="hidden" asp-for="Id" name="Id" value="@Model.Id" />
                            <input type="hidden" asp-for="VehicleStatus" name="VehicleStatus" value="@Model.VehicleStatus" />
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Nome/Modelo</label>
                                        @Html.EditorFor(model => model.VehicleName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.VehicleName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputPassword1">Placa</label>
                                        @Html.EditorFor(model => model.VehiclePlate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.VehiclePlate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Ano</label>
                                        @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.Year, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="location1">Tipo do Veículo</label>

                                        @{ string[] vehicleType = Enum.GetNames(typeof(EmergencyManagementSystem.Service.Enums.VehicleType)); }

                                        <select class="form-control" name="VehicleType" id="VehicleType">
                                            @foreach (EmergencyManagementSystem.Service.Enums.VehicleType suit in (EmergencyManagementSystem.Service.Enums.VehicleType[])Enum.GetValues(typeof(EmergencyManagementSystem.Service.Enums.VehicleType)))
                                            {
                                                suit.GetEnumDescription();
                                                <option value="@suit" @(suit == (Model?.VehicleType ?? 0) ? "Selected" : "")>@suit.GetEnumDescription()</option>
                                            }

                                        </select>
                                        @Html.ValidationMessageFor(d => d.VehicleType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputPassword1">Cidade</label>
                                        @Html.EditorFor(model => model.OperationCity, new { htmlAttributes = new { @class = "form-control", @placeholder = "Onde o veículo vai atuar" } })
                                        @Html.ValidationMessageFor(d => d.OperationCity, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Codinome</label>
                                        @Html.EditorFor(model => model.Codename, new { htmlAttributes = new { @class = "form-control", @placeholder = "USB01, USA01..." } })
                                        @Html.ValidationMessageFor(d => d.Codename, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="card-body">
                        <button type="submit" class="btn btn-lg bg-purpleTest">Salvar alterações</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

