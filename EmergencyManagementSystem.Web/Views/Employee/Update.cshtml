@model EmergencyManagementSystem.Service.Models.EmployeeModel
@using EmergencyManagementSystem.Service.Models
@{
    ViewData["Title"] = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<string> Messages = ViewBag?.Error;
}

@Html.AntiForgeryToken()

<div class="content-header sty-one">
    <h1 class="text-white">Atualização de Funcionário</h1>
</div>
@using (Html.BeginForm())
{
    <div class="content">

        @if (Messages != null)
        {
            <div class="m-b-3" id="error-notification">
                <div class="callout callout-info" style="margin-bottom: 0!important;">
                    <h4><i class="fa fa-warning"></i> Nota:</h4>
                    @foreach (string error in Messages)
                    {
                        @error<br />
                    }
                </div>
            </div>
        }

        <div class="info-box">
            <div class="row">

                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-body">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="row">
                                <div class="col-md-4 col-xs-12">
                                    <h4 class="card-title">Dados do Profissional</h4>
                                    <div id="treeview1" class=""></div>
                                </div>
                            </div>
                            <input type="hidden" asp-for="Id" name="Id" value="@Model.Id" readonly />
                            <input type="hidden" asp-for="AddressId" name="AddressModel.Id" value="@Model.AddressModel.Id" />
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Nome completo</label>
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Data de nascimento</label>
                                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(d => d.BirthDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">CPF</label>
                                        @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(d => d.CPF, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">RG</label>
                                        @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(d => d.RG, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">E-mail</label>
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Telefone</label>
                                        @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.Telephone, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="location1">Profissão</label>
                                        <select class="form-control" name="Occupation" id="Occupation">

                                            @foreach (EmergencyManagementSystem.Service.Enums.Occupation suit in (EmergencyManagementSystem.Service.Enums.Occupation[])Enum.GetValues(typeof(EmergencyManagementSystem.Service.Enums.Occupation)))
                                            {
                                                suit.GetEnumDescription();
                                                <option value="@suit" @(suit == (Model?.Occupation ?? 0) ? "Selected" : "")>@suit.GetEnumDescription()</option>
                                            }
                                        </select>
                                        @Html.ValidationMessageFor(d => d.Occupation, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Registro Profissional</label>
                                        @Html.EditorFor(model => model.ProfessionalRegistration, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.ProfessionalRegistration, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="location1">Coorporação</label>
                                        <select class="form-control" name="Company" id="Company">

                                            @foreach (EmergencyManagementSystem.Service.Enums.Company suit in (EmergencyManagementSystem.Service.Enums.Company[])Enum.GetValues(typeof(EmergencyManagementSystem.Service.Enums.Company)))
                                            {
                                                suit.GetEnumDescription();
                                                <option value="@suit" @(suit == (Model?.Company ?? 0) ? "Selected" : "")>@suit.GetEnumDescription()</option>
                                            }
                                        </select>
                                        @Html.ValidationMessageFor(d => d.Company, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4 col-xs-12">
                                    <h4 class="card-title">Dados do Endereço</h4>
                                    <div id="treeview1" class=""></div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">CEP</label>
                                        @Html.EditorFor(model => model.AddressModel.CEP, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.AddressModel.CEP, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Cidade</label>
                                        @Html.EditorFor(model => model.AddressModel.City, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.AddressModel.City, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Bairro</label>
                                        @Html.EditorFor(model => model.AddressModel.District, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.AddressModel.District, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Rua</label>
                                        @Html.EditorFor(model => model.AddressModel.Street, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.AddressModel.Street, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Número</label>
                                        @Html.EditorFor(model => model.AddressModel.Number, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.AddressModel.Number, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Complemento</label>
                                        @Html.EditorFor(model => model.AddressModel.Complement, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.AddressModel.Complement, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group has-feedback">
                                        <label for="exampleInputEmail1">Referência</label>
                                        @Html.EditorFor(model => model.AddressModel.Reference, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(d => d.AddressModel.Reference, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="card-body">
                            <button type="submit" class="btn btn-lg bg-purpleTest">Salvar alterações</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

}


